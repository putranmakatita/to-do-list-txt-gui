/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.todolistwithtxt;

import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
public class ToDoListJFrame extends javax.swing.JFrame {

    ToDoListWithTxt logic = new ToDoListWithTxt();

    /**
     * Creates new form ToDoListJFrame
     */
    public ToDoListJFrame() {
        initComponents();
        displayTask();
        setupTableChangeListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        newTaskField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addTaskButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        toDoListTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tanggalField = new javax.swing.JFormattedTextField();
        waktuField = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 800));
        getContentPane().setLayout(null);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(414, 251, 181, 0);

        jPanel1.setAlignmentX(0.1F);
        jPanel1.setMinimumSize(new java.awt.Dimension(654, 660));

        jLabel3.setText("New Task");

        newTaskField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTaskFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Waktu");

        addTaskButton.setText("Add Task");
        addTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskButtonActionPerformed(evt);
            }
        });

        toDoListTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "No", "Kode", "Task", "Tanggal", "Waktu"
                }) {
            boolean[] canEdit = new boolean[] {
                    false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        toDoListTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        toDoListTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                toDoListTablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(toDoListTable);
        if (toDoListTable.getColumnModel().getColumnCount() > 0) {
            toDoListTable.getColumnModel().getColumn(0).setMinWidth(40);
            toDoListTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            toDoListTable.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("To Do List");

        jLabel4.setText("Tanggal");
        jLabel4.setToolTipText("");

        tanggalField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        tanggalField.setText("dd/mm/yyyy");

        waktuField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        waktuField.setText("hh.mm");
        waktuField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waktuFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(279, 279, 279)
                                .addComponent(jLabel1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(addTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 181,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(newTaskField, javax.swing.GroupLayout.PREFERRED_SIZE, 176,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(waktuField, javax.swing.GroupLayout.PREFERRED_SIZE, 122,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tanggalField, javax.swing.GroupLayout.PREFERRED_SIZE, 133,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(newTaskField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel4)
                                                .addComponent(tanggalField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addComponent(jLabel3)))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(waktuField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addComponent(addTaskButton)
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(30, 20, 680, 480);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void toDoListTablePropertyChange(java.beans.PropertyChangeEvent evt) {// GEN-FIRST:event_toDoListTablePropertyChange
        // TODO add your handling code here:
    }// GEN-LAST:event_toDoListTablePropertyChange

    private void setupTableChangeListener() {
        toDoListTable.getModel().addTableModelListener(e -> {
            if (e.getType() == javax.swing.event.TableModelEvent.UPDATE) {
                int row = e.getFirstRow();
                int column = e.getColumn();

                // Cek apakah baris dan kolom valid (bisa -1 jika update besar)
                if (row >= 0 && column >= 0) {
                    try {
                        Object newValue = toDoListTable.getValueAt(row, column);
                        boolean isValid = validateCell(row, column, newValue.toString());
                        if (isValid) {
                            int columnCount = toDoListTable.getColumnCount();
                            StringBuilder rowData = new StringBuilder();

                            for (int col = 0; col < columnCount; col++) {
                                Object cellValue = toDoListTable.getValueAt(row, col);
                                rowData.append(cellValue).append(" | "); // atau simpan dalam array/list sesuai
                                                                         // kebutuhan
                            }

                            // Contoh menampilkan hasilnya
                            boolean isUpdated = logic.updateTask(toDoListTable.getValueAt(row, 1).toString(),
                                    newValue.toString(), column - 1);
                            if (isUpdated) {
                                JOptionPane.showMessageDialog(null,
                                        "Cell diedit: Baris " + row + ", Kolom " + column + ", Nilai baru: " +
                                                newValue);
                                displayTask();
                            } else {
                                JOptionPane.showMessageDialog(null, "Gagal update data!");

                            }
                        }
                    } catch (Exception err) {
                        JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + err);
                    }
                }
            }
        });
    }

    private boolean validateCell(int row, int col, String val) {
        boolean valid = true;
        String errorMessage = "";

        if (col == 2) {
            if (val.trim().isEmpty()) {
                valid = false;
                errorMessage = "Kolom 1 tidak boleh kosong.";
            }
        } else if (col == 3) {
            String trimmed = val.trim();
            if (trimmed.equalsIgnoreCase("dd/MM/yyyy") || trimmed.equalsIgnoreCase("dd/mm/yyyy")) {
                valid = false;
                errorMessage = "Kolom 2 tidak boleh berisi teks contoh. Isikan tanggal sebenarnya, misalnya: 15/04/2025.";
            } else {
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                dateFormat.setLenient(false);
                try {
                    dateFormat.parse(trimmed);
                } catch (ParseException e) {
                    valid = false;
                    errorMessage = "Kolom 2 harus berupa tanggal dengan format: 15/04/2025.";
                }
            }
        } else if (col == 4) {
            String trimmed = val.trim();
            if (trimmed.equalsIgnoreCase("hh.mm")) {
                valid = false;
                errorMessage = "Kolom 3 tidak boleh berisi teks contoh. Isikan waktu sebenarnya, misalnya: 09.00.";
            } else {
                SimpleDateFormat timeFormat = new SimpleDateFormat("HH.mm");
                timeFormat.setLenient(false);
                try {
                    timeFormat.parse(trimmed);
                } catch (ParseException e) {
                    valid = false;
                    errorMessage = "Kolom 3 harus berupa waktu dengan format: 09.00.";
                }
            }
        }

        if (!valid) {
            JOptionPane.showMessageDialog(null,
                    "Kesalahan pada baris " + (row + 1) + ", kolom " + (col + 1) + ":\n" + errorMessage,
                    "Validasi Gagal",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            displayTask();
        }

        return valid;
    }

    public void resetForm() {
        newTaskField.setText("");
        tanggalField.setText("dd/mm/yyyy");
        waktuField.setText("hh.mm");
    }

    private void newTaskFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_newTaskFieldActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_newTaskFieldActionPerformed

    private void waktuFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_waktuFieldActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_waktuFieldActionPerformed

    private void addTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        System.out.println("anak anjing");
        logic.addTask(newTaskField.getText(), tanggalField.getText(), waktuField.getText());
        displayTask();
        resetForm();

    }// GEN-LAST:event_jButton1ActionPerformed

    private void displayTask() {
        DefaultTableModel model = (DefaultTableModel) toDoListTable.getModel();
        model.setRowCount(0); // Hapus semua baris lama

        Object[][] tasks = logic.getAllTasks(); // Ambil array 2 dimensi

        for (Object[] row : tasks) {
            model.addRow(row); // Tambahkan ke tabel
        }
    }

    public static void jalanKan() {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ToDoListJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ToDoListJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ToDoListJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToDoListJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ToDoListJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTaskButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField newTaskField;
    private javax.swing.JFormattedTextField tanggalField;
    private javax.swing.JTable toDoListTable;
    private javax.swing.JFormattedTextField waktuField;
    // End of variables declaration//GEN-END:variables
}
